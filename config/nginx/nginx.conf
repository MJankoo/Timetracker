worker_processes 1;
error_log /var/www/symfony/config/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /var/www/symfony/config/nginx/access.log;
    error_log /var/www/symfony/config/nginx/error.log;

    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    fastcgi_temp_path /tmp/fastcgi_temp;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Hide nginx version in headers
    server_tokens off;

    server {
        listen 8000;
        listen [::]:8000;
        index index.php index.html;
        server_name _;
        error_log  /var/www/symfony/config/nginx/error.log;
        access_log /var/www/symfony/config/nginx/access.log;
        root /var/www/symfony/app/public;

        include /etc/nginx/default.d/*.conf;

        location /recovery/install {
            index index.php;
            try_files $uri /recovery/install/index.php$is_args$args;
        }

        location /recovery/update/ {
            if (!-e $request_filename){
                rewrite . /recovery/update/index.php last;
            }
        }

        location / {
            try_files $uri /index.php$is_args$args;
        }

		location ~* \.xml$ {
            try_files $uri /index.php$is_args$args;
        }

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

         # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

         location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
                expires 5d;
            }

        # Allow fpm ping and status from localhost
        location ~ ^/(fpm-status|fpm-ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

    }
}
